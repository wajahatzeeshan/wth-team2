# The workflow file is triggered on a push event. It checks out the code, logs into Azure using the Azure login action, deploys the Bicep file using the Azure ARM deploy action, and logs out of Azure.
# The Azure login action uses the AZURE_CREDENTIAL secret to authenticate with Azure. The AZURE_CREDENTIAL secret is a service principal that has the Contributor role on the subscription. The AZURE_SUBSCRIPTION secret contains the subscription ID, and the AZURE_RG secret contains the resource group name.
# The Azure ARM deploy action uses the subscription ID, resource group name, Bicep file path, and environment parameter to deploy the Bicep file. The failOnStdErr parameter is set to false to prevent the workflow from failing if there are errors during deployment.
# The az logout command is used to log out of Azure after the deployment is complete.

name: Deploy Bicep file
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@main

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}

    - name: Deploy Bicep file
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./InfrastructureAsCode/main.bicep
        failOnStdErr: false
        parameters: environment=prod

    - name: Log out of Azure
      run: az logout
    
    - name: Create Issue on Failure
      if: failure()
      uses: actions/github-script@v5
      with:
        script: |
          const core = require('@actions/core');
          const github = require('@actions/github');
          const issueTitle = "Workflow failed: ${{ github.workflow }}"
          const issueBody = `Workflow ${{ github.workflow }} failed on ${{ github.run_id }}. Please check it.`
          const token = process.env.GITHUB_TOKEN
          const octokit = github.getOctokit(token)
          await octokit.rest.issues.create({
            owner: github.context.repo.owner,
            repo: github.context.repo.repo,
            title: issueTitle,
            body: issueBody
          })
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



